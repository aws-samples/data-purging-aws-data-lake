{
   "Comment":"Manual Approval process!",
   "StartAt":"GeneratePurgeReport",
   "States":{
      "GeneratePurgeReport":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName":"<lambda-function-arn>",
            "Payload":{
               "Input":{
                  "key.$":"$.detail.requestParameters.key",
                  "bucket.$":"$.detail.requestParameters.bucketName"
               }
            }
         },
         "ResultPath":"$.taskresult",
         "Next":"GetPurgeApproval"
      },
      "GetPurgeApproval":{
         "Type":"Task",
         "Resource":"<step-functions-activity-arn>",
         "Parameters":{
            "approverEmailAddress":"<approver-email>",
            "bucketPath.$":"$.taskresult.Payload.EmailKey"
         },
         "TimeoutSeconds":3600,
         "Next":"SendTaskSuccess",
         "ResultPath":null,
         "Catch":[
            {
               "ErrorEquals":[
                  "Rejected"
               ],
               "Next":"SendTaskFailure"
            }
         ]
      },
      "SendTaskSuccess":{
         "Type":"Task",
         "Resource":"arn:aws:states:::sns:publish",
         "Parameters":{
            "Message":{
               "Input":"Received Approval to Purge Data!"
            },
            "TopicArn":"<sns-topic-arn>"
         },
         "ResultPath":null,
         "Next":"PurgeData"
      },
      "PurgeData":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName":"<lambda-function-arn>",
            "Payload":{
               "Input":{
                  "key.$":"$.detail.requestParameters.key",
                  "bucket.$":"$.detail.requestParameters.bucketName",
                  "ApprovedJSONValKey.$":"$.taskresult.Payload.JSONValKey"
               }
            }
         },
         "Next":"NotifyPurgeSuccess",
         "Catch":[
            {
               "ErrorEquals":[
                  "States.ALL"
               ],
               "Next":"NotifyPurgeFailure"
            }
         ]
      },
      "NotifyPurgeSuccess":{
         "Type":"Task",
         "Resource":"arn:aws:states:::sns:publish",
         "Parameters":{
            "Message":{
               "Input":"Purge Data Request, Successfully Completed!"
            },
            "TopicArn":"<sns-topic-arn>"
         },
         "End":true
      },
      "NotifyPurgeFailure":{
         "Type":"Task",
         "Resource":"arn:aws:states:::sns:publish",
         "Parameters":{
            "Message":{
               "Input":"Purge Request Failed!"
            },
            "TopicArn":"<sns-topic-arn>"
         },
         "End":true
      },
      "SendTaskFailure":{
         "Type":"Task",
         "Resource":"arn:aws:states:::sns:publish",
         "Parameters":{
            "Message":{
               "Input":"Manual workflow call back failed"
            },
            "TopicArn":"<sns-topic-arn>"
         },
         "End":true
      }
   }
}
